FORMAT: 1A
HOST: https://hello-books-postgresql.herokuapp.com/

# hello-books-postgresql

This is where users are going to rent a book. For this app, the admin can perform CRUD function while normal users can borrow or return a book. If book is borrowed, another user can't access it it until it's been returned. 

## User Registration [/api/v2/auth/register]


### Register a user [POST]


Register a user by sending a json object with username, email, password and optional is_admin true if user
is admin iproperties.
The password must be 8 characters or more, must have one capital letter, a number
and a character.
The email must be in the format (something@something.something)

+ Request (application/json)

        {
            "username": "admin1",
            "email: "admin1@mail.com",
            "password": "ADMINlogin#password",
            "is_admin": true
        }


+ Response 201 (application/json)

        {
            "auth_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1MDM0ODQ5OTYsImlhdCI6MTUwMzM5ODU4Niwic3ViIjo1fQ.GC6IEOohdo_xrz9__UeugIlir0qtJdKbEzBtLgqjt5A",
            "message": "successfully registered",
            "status": "success"
        }

+ Response 400 (application/json)

        {
            "message": "user already exists, please sign in",
            "status": "error"
        }
        
+ Response 400 (application/json)

        {
            "error": "bad request"
        }
        
+ Response 400 (application/json)

        {  
            "message": {
                "email": [
                    "required field"
                ],
                "password": [
                    "required field"
                ],
                "username": [
                    "required field"
                ]
            },
            "status": "error"
        }        
        
        
+ Response 500 (application/json)        

        {
            "error": "internal server error"
        }